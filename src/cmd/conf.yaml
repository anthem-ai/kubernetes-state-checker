---
some: other configs
random: 5

kubernetes-state-checker:
# - ttype: serviceChecks
#   name: Checks for various aspects of a service
#   description: Allows you to check for various aspects of a service
#   namespace: hos-m2
#   # Input values for this specific check
#   values:
#     # The service name to act on
#     serviceName: healthapp-caregaps
#     # Port number to check if the `ports` check is enabled
#     port: 20014
#     checksEnabled:
#       # Check if there is a cluster IP associated with this endpoint
#       clusterIP: true
#       # Checks if there are endpoints associated to this service or not
#       endpoints: true
#       # Check if host port is enabled or not
#       hostPort: false
#       # Check if the port is the one that is specified above
#       ports: true
# - ttype: doesEnvarExistInDeployment
#   name: Check that the microservice 2 deployments has the correct envar for microservice 1
#   description: The microservice 2 uses the "MICROSERVICE_1_HOST_PORT" envar to find microservice 1.  This checks to make sure that this envar is there and set to the correct value.
#   Namespace: app
#   # Input values for this specific check
#   values:
#     deploymentName: microservice-2
#     envarKey: MICROSERVICE_1_HOST_PORT
#     envarValue: microservice-1:5000
#     foo:
#       foo: bar
- ttype: deploymentChecks
  name: Checks for various aspects of a deployment
  description: Allows you to check for various aspects of a deployment
  namespace: hos-m2
  # Input values for this specific check
  values:
    # The service name to act on
    deploymentName: healthapp-caregaps
    checksEnabled:
      containers:
      - name: container1
        # Check if a set of environment variables are present
        env:
        # Specify the container in the pod that should contain this set of envars
        # A specific named container
        - name: foo
          value: bar
        - name: foo2
          value: bar2
        # image:
        #   name: "something*:*"
        # healthcheck:
        #   value: something

      # Check if a configmap mount is set
      configMapMounts:
      - foo
      - bar
